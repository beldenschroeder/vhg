
# `--platform=linux/amd64` needed to resolve this issue: https://stackoverflow.com/questions/74705475/aws-ecs-exec-usr-local-bin-docker-entrypoint-sh-exec-format-error
#FROM --platform=linux/amd64 docker.io/node:lts-alpine as dependencies
FROM --platform=linux/amd64 docker.io/node:20-slim as base
RUN corepack enable pnpm

# Install dependencies only when needed
FROM base AS deps
# RUN apk add --no-cache libc6-compat
# RUN apk add g++ make py3-pip
# WORKDIR /usr/src/app
WORKDIR /app
# COPY ../../package.json ./
COPY ../../.npmrc ../../package.json ../../pnpm-lock.yaml ./
COPY ../../prisma ./prisma
# RUN npm install --omit=dev --legacy-peer-deps
RUN pnpm install --frozen-lockfile --prod
# Keep the prisma version in sync the @prisma/client dependency's version
# RUN npm install -g prisma@5.3.1
# RUN prisma generate

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY ../../. .
RUN apt-get update -y && apt-get install -y openssl
RUN pnpm exec prisma generate

ENV NEXT_TELEMETRY_DISABLED=1
ENV POSTGRES_PRISMA_URL="postgres://default:4PIVAioZE2sL@ep-misty-mouse-77177859-pooler.us-east-1.postgres.vercel-storage.com/verceldb?pgbouncer=true&connect_timeout=15"

RUN pnpm exec nx build vhg

# Production image, copy all the files and run next
# `--platform=linux/amd64` needed to resolve this issue: https://stackoverflow.com/questions/74705475/aws-ecs-exec-usr-local-bin-docker-entrypoint-sh-exec-format-error
# FROM --platform=linux/amd64 docker.io/node:lts-alpine as runner
FROM base as runner

# RUN apk add --no-cache dumb-init

ENV VERCEL_ENV=production
ENV VERCEL_URL=vhgapp.beldenschroeder.me
ENV NEXT_TELEMETRY_DISABLED=1

# WORKDIR /usr/src/app
WORKDIR /app

# Copy installed dependencies from dependencies stage
# COPY --from=dependencies /usr/src/app/node_modules ./node_modules
COPY --from=builder /app/node_modules ./node_modules

# Copy built application files
# COPY ../../dist/apps/vhg/package.json ./package.json
# COPY ../../dist/apps/vhg/public ./public
# COPY ../../dist/apps/vhg/.next ./.next
COPY --from=builder /app/dist/apps/vhg/package.json ./package.json
COPY --from=builder /app/dist/apps/vhg/public ./public
COPY --from=builder /app/dist/apps/vhg/.next ./.next

# Run the application under "node" user by default
RUN chown -R node:node .
USER node
EXPOSE 3000

# If you are using the custom server implementation:
#CMD ["dumb-init", "node", "server/main.js"]

# If you are using the NextJS built-int server:
# CMD ["dumb-init", "npm", "start"]
CMD ["npm", "start"]
