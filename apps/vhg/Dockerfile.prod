# Install dependencies only when needed
# `--platform=linux/amd64` needed to resolve this issue: https://stackoverflow.com/questions/74705475/aws-ecs-exec-usr-local-bin-docker-entrypoint-sh-exec-format-error
FROM --platform=linux/amd64 docker.io/node:lts-alpine as dependencies

RUN apk add --no-cache libc6-compat
RUN apk add g++ make py3-pip
WORKDIR /usr/src/app
COPY ../../package.json ./
COPY ../../prisma ./prisma
RUN npm install --omit=dev --legacy-peer-deps
# Keep the prisma version in sync the @prisma/client dependency's version
RUN npm install -g prisma@5.3.1
RUN prisma generate

# Production image, copy all the files and run next
# `--platform=linux/amd64` needed to resolve this issue: https://stackoverflow.com/questions/74705475/aws-ecs-exec-usr-local-bin-docker-entrypoint-sh-exec-format-error
FROM --platform=linux/amd64 docker.io/node:lts-alpine as runner

RUN apk add --no-cache dumb-init

# TODO: Check if this is being used
# ENV VERCEL_URL beldenschroeder.me
# TODO: Check if this is being used
ENV NODE_ENV production
# TODO: Check if this is being used
# ENV PORT 3000
# TODO: Check if this is being used
# ENV HOST 0.0.0.0
ENV NEXT_TELEMETRY_DISABLED 1

WORKDIR /usr/src/app

# Copy installed dependencies from dependencies stage
COPY --from=dependencies /usr/src/app/node_modules ./node_modules

# Copy built application files
# TODO: Remove commented out line, if not correct
# COPY --from=dependencies /usr/src/app/package.json ./package.json
COPY ../../dist/apps/vhg/package.json ./package.json
COPY ../../dist/apps/vhg/public ./public
COPY ../../dist/apps/vhg/.next ./.next

# Run the application under "node" user by default
RUN chown -R node:node .
USER node
EXPOSE 3000

# If you are using the custom server implementation:
#CMD ["dumb-init", "node", "server/main.js"]

# If you are using the NextJS built-int server:
CMD ["dumb-init", "npm", "start"]
