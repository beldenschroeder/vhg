name: 'Build & Deploy to Production'
on:
  push:
    branches:
      - main
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:  
        - name: Checkout
          uses: actions/checkout@v2 
        - name: Setup AWS ECR Details
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
        - name: Login to Amazon ECR
          id: login-pf-aws-ecr
          uses: aws-actions/amazon-ecr-login@v1
        - name: Build and push the tagged docker image to Amazon ECR
          env:
            ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO }}
            IMAGE_TAG: v1
          run: |
            docker build -f apps/vhg/Dockerfile.prod -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

# env:
#   # TODO: Consider making these secrets, as mentioned in GitHub Actions
#   # documentation
#   # (https://docs.github.com/en/actions/learn-github-actions/variables#creating-configuration-variables-for-a-repository)
#   SERVICE_NAME: vhgapp
#   SERVICE_TAG: v1
#   ERC_REGISTRY_URI: 737094223358.dkr.ecr.us-east-1.amazonaws.com
#   ERC_REPO_URL: 737094223358.dkr.ecr.us-east-1.amazonaws.com/vhgapp
# jobs:
#   deploy:
#     name: Deploy
#     runs-on: ubuntu-latest
#     steps:
#       # Install Node.js dependencies
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v2
#         with:
#           # TODO: Update to Node.js 20, like is in the package.json
#           node-version: '18.17.1'
#       - name: Dockerize the application
#         run: |
#           echo "Dockerizing the application..."
#           # TODO: Remove commented out line below later as `get-login` is deprecated.
#           # $(aws ecr get-login --no-include-email --region us-east-1)
#           aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ERC_REGISTRY_URI
#           aws ecr create-repository --repository-name $SERVICE_NAME || true
#           docker build -f apps/vhg/Dockerfile.prod -t $SERVICE_NAME:$SERVICE_TAG .
#           docker tag $SERVICE_NAME:$SERVICE_TAG $ERC_REPO_URL:$SERVICE_TAG
#           docker push $ERC_REPO_URL:$SERVICE_TAG